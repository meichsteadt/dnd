<%= form_for(encounter) do |f| %>
  <div class="row">
    <div class="col-sm-4">
      <h4>Encounter Deatils</h4>
      <hr>
      <div class="form-group">
        <%= f.label :name %>
        <%= f.text_field :name, class: 'form-control' %>
      </div>

      <div class="form-group">
        <%= f.label :player_level, 'Intended Player Level' %>
        <%= f.select :player_level, options_for_select((1..20), selected: [encounter.player_level]), {}, class: 'form-control', id: 'player_level', onchange: 'updateTotalDifficulty($(this).val(), null)'%>
      </div>

      <div class="form-group">
        <%= f.label :n_players, 'Number of Players' %>
        <%= f.select :n_players, options_for_select((1..10), selected: [encounter.n_players]), {}, class: 'form-control', id: 'n_players', onchange: 'updateTotalDifficulty(null, $(this).val())'%>
      </div>

      <div class="form-group">
        <%= f.label :notes %>
        <%= f.text_area :notes, class: 'form-control sm', min_rows: 5 %>
      </div>

    </div>

    <div class="col-sm-8">
      <h4>Monsters</h4>
      <hr>

      <div class="encounter_monsters">
        <table class="table">
          <tr>
            <th>XP</th>
            <th>Monster</th>
            <th>HP</th>
            <!-- <th>Loot Items</th> -->
            <th colspan="2">Loot Currency</th>
          </tr>
          <% encounter.monsters.each do |monster| %>
            <tr id="<%= monster.id.to_s %>">
              <%= render 'edit_encounter_monster', monster: monster %>
            </tr>
          <% end %>
          <%= render 'new_encounter_monster' if request.url.include?("new") %>
        </table>
        <button type="button" class="btn btn-red" onclick="addMonster()">Add Monster</button>
      </div>
      <br>
      <h5><span id="total_xp">Total XP:</span> <div id="difficulty_lvl">()</div></h5>

      <hr>
      <h4>NPC's</h4>

      <div class="encounter_npcs">
        <table class="table">
          <tr>
            <th>NPC</th>
            <th></th>
          </tr>
          <% encounter.npcs.each do |npc| %>
            <tr>
              <td><%= npc.name %></td>
              <%= hidden_field_tag 'encounter[encounter_npcs[]id]', npc._id.to_s %>
              <td><i class="material-icons btn-link" onclick="removeRow(this)">delete</i></td>
            </tr>
          <% end %>
          <tr>
            <td>
              <%= select_tag :npc_id, options_from_collection_for_select([Npc.new(id: '_', name: 'Select an NPC')] + current_user.npcs, 'id', 'name', selected: ['_'], disabled: encounter.npcs.pluck(:monster).map {|e| e.id.to_s} + ['_']), class: 'form-control', id: 'npc_select' %>
            </td>
          </tr>
        </table>
      </div>
    </div>
  </div>
  <hr>
  <div class="form-group">
    <%= f.submit nil, class: "btn btn-secondary" %>
  </div>
<% end %>

<script type="text/javascript">
  // $("#npc_select").select2();

  $(function() {
    $('#npc_select').on("change", selectNpc)
  })

  function addMonster() {
    $.get("<%= encounters_path %>/monsters/new?monster_type=monster");
  }

  function addNpc() {
    $.get("<%= encounters_path %>/new?monster_type=npc");
  }

  function selectNpc(elem) {
    var id = $(elem.target).val();
    $.get("<%= npcs_path %>/" + id + ".json").then(response => {
      let tr = $(elem.target).parents('tr');
      let html = `<tr id="${id}">
          <td> ${response["name"]}</td>
          <td><i class="material-icons btn-link" onclick="removeRow(this)">delete</i></td>
          <%= hidden_field_tag 'encounter[encounter_npcs[]id]', nil %>
        </tr>`
      html = $(html).insertBefore(tr)
      html.find('input').val(id);
      tr.find(`option[value='_']`).attr('selected', false);
      tr.find(`option[value='_']`).attr('selected', true);
      tr.find(`option[value=${id}]`).attr('disabled', true);
    })
  }

  function selectMonster(elem) {
    var id = $(elem).val();
    var count = $(`td[data-id=${id}]`).length
    $(elem).attr('data-id', id);
    var difficulty = $(elem).parents('tr').children('.difficulty')
    var hpInput = $(elem).parents('tr').find('.hp input');

    $.get("<%= monsters_path %>/" + id + ".json").then(response => {
      hpInput.val(response["hit_points"]);
      difficulty.text(response["xp"]);
      updateTotalDifficulty();
    })
  }

  function updateTotalDifficulty(playerLevel = null, nPlayers = null) {
    if(playerLevel == null) playerLevel = $("#player_level").val();
    if(nPlayers == null) nPlayers = $("#n_players").val();
    var nMonsters = $('.monster_select').length;
    var total = 0;
    $('.difficulty').each(function(x, y) {
      total += parseFloat($(y).text());
    })
    $("#total_xp").text(`Total XP: ${total}`);

    $.get(`
    <%= encounters_path %>/total_difficulty?n_players=${nPlayers}&player_level=${playerLevel}&total_xp=${total}&n_monsters=${nMonsters}
    `)
  }

  function removeRow(elem) {
    $(elem).parents('tr').remove();
    var id = $(elem).parents('tr').attr('id')
    $("#npc_select").find(`option[value=${id}]`).attr('disabled', false);
  }

</script>
